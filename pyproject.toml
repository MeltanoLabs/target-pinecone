[tool.poetry]
name = "meltanolabs-target-pinecone"
version = "0.0.0"
description = "`target-pinecone` is a Singer target for Pinecone, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Pat Nadolny"]
keywords = [
    "ELT",
    "Pinecone",
]
license = "ELv2"
packages = [
    { include = "target_pinecone" }
]

[tool.poetry.dependencies]
python = "<3.12,>=3.8"
singer-sdk = { git = "https://github.com/meltano/sdk.git", branch = "standardize_load_methods" }
fs-s3fs = { version = "^1.1.1", optional = true }
requests = "^2.31.0"
pinecone-client = "^3.1.0"

[tool.poetry.dev-dependencies]
pytest = "^7.4.3"
singer-sdk = { version="^0.31.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.ruff]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
]
select = ["ALL"]
src = ["target_pinecone"]
target-version = "py37"

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["target_pinecone"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.8", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.scripts]
# CLI declaration
target-pinecone = 'target_pinecone.target:TargetPinecone.cli'

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"